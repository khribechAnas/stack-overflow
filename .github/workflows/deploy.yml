name: CI/CD Angular + Spring Boot

on:
  push:
    branches: [main]

env:
  MAVEN_CLI_OPTS: "-B -DskipTests"

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build Spring Boot App
        run: |
          cd backend
          ./mvnw clean install $MAVEN_CLI_OPTS
      - uses: actions/upload-artifact@v3
        with:
          name: backend-jar
          path: backend/target/*.jar

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Build Angular App
        run: |
          cd frontend
          npm ci
          npm run build --prod
      - uses: actions/upload-artifact@v3
        with:
          name: frontend-dist
          path: frontend/dist/

  test-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Run Spring Tests
        run: |
          cd backend
          ./mvnw test

  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Run Angular Tests
        run: |
          cd frontend
          npm ci
          npm run test -- --watch=false --browsers=ChromeHeadless

  deploy:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend, test-backend, test-frontend]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Pull Images
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/stack-overflow-backend:0.0.1
          docker pull ${{ secrets.DOCKER_USERNAME }}/stack-overflow-frontend:0.0.1

      - name: Start with Docker Compose
        run: |
          cd docker
          docker-compose up -d
